Regex ::= StartOfStringAnchor? Expression

Expression ::= ExpressionItem+

ExpressionItem
	::= Match
	  | Group
	  | Backreference
	  | Alternation

/* Grouping Constructs 
------------------------------------------------------------------*/

Group ::= "(" GroupNonCapturingModifier? Expression ")" Quantifier?
GroupNonCapturingModifier ::= "?:"

/* Alternations
------------------------------------------------------------------*/

Alternation ::= Expression "|" Expression 

/* Match
------------------------------------------------------------------*/

Match ::= MatchItem Quantifier?

MatchItem
	::= MatchAnyCharacter
	  | MatchCharacterClass
	  | MatchCharacter

MatchAnyCharacter ::= "."

MatchCharacterClass
	::= CharacterGroup
	  | CharacterClass
	  | CharacterClassFromUnicodeCategory

MatchCharacter ::= Char

/* Character Classes
------------------------------------------------------------------*/

CharacterGroup ::= "[" CharacterGroupNegativeModifier? CharacterGroupItem+ "]"

CharacterGroupNegativeModifier ::= "^"
CharacterGroupItem
	::= CharacterClass
	  | CharacterClassFromUnicodeCategory
	  | CharacterRange

CharacterClass
	::= CharacterClassAnyWord
	  | CharacterClassAnyWordInverted
	  | CharacterClassAnyDecimalDigit
	  | CharacterClassAnyDecimalDigitInverted

CharacterClassAnyWord ::= "\w"
CharacterClassAnyWordInverted ::= "\W"
CharacterClassAnyDecimalDigit ::= "\d"
CharacterClassAnyDecimalDigitInverted ::= "\D"

CharacterClassFromUnicodeCategory ::= "\p{" UnicodeCategoryName "}"
UnicodeCategoryName ::= Letters

CharacterRange ::= Char ("-" Char)?

/* Quantifiers 
------------------------------------------------------------------*/

Quantifier ::= QuantifierType LazyModifier?
QuantifierType
	::= ZeroOrMoreQuantifier
	  | OneOrMoreQuantifier
	  | ZeroOrOneQuantifier
	  | RangeQuantifier

LazyModifier ::= "?"

ZeroOrMoreQuantifier ::= "*"
OneOrMoreQuantifier ::= "+"
ZeroOrOneQuantifier ::= "?"

RangeQuantifier ::= "{" RangeQuantifierLowerBound ( "," RangeQuantifierUpperBound? )? "}"
RangeQuantifierLowerBound ::= Integer
RangeQuantifierUpperBound ::= Integer

/* Backreferences
------------------------------------------------------------------*/

Backreference ::= "\" Integer

/* Anchors
------------------------------------------------------------------*/

StartOfStringAnchor ::= "^"

/* Misc
------------------------------------------------------------------*/

Integer ::= [0-9]+
Letters ::= [a-zA-Z]+
Char ::= #x9 | #xA | #xD | [#x20-#xD7FF] | [#xE000-#xFFFD] | [#x10000-#x10FFFF]